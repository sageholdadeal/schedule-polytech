import telebot
from telebot import types
import requests
from bs4 import BeautifulSoup
import urllib.parse
import io
import pandas as pd
import re
from datetime import datetime
import time

TOKEN = '7532741882:AAENZLumHJyXYXImkHv-gflYKxejWmIyDD0'

bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
last_message_id = None
last_user_message_id = None

USER_REQUESTS = {}

def fetch_schedule_link():
    url = 'https://politech-nsk.ru/index.php/studentam'
    response = requests.get(url)
    response.raise_for_status()
    
    soup = BeautifulSoup(response.text, 'html.parser')
    
    keywords = {'—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–Ω–∞', '–∫—É—Ä—Å'}
    
    for link_tag in soup.find_all('a', href=True):
        link_text = link_tag.get_text(strip=True).lower()
        if keywords.issubset(set(link_text.split())):
            href = link_tag['href']
            full_url = urllib.parse.urljoin(url, href)
            return full_url

    return "–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."

def download_file(url):
    response = requests.get(url)
    response.raise_for_status()
    return io.BytesIO(response.content)

def delete_previous_message(chat_id, message_id):
    try:
        bot.delete_message(chat_id, message_id)
    except Exception as e:
        print(f"Failed to delete message: {e}")

# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    schedule_button = types.KeyboardButton('üìÖ –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
    markup.add(schedule_button)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üìÖ –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
def send_schedule(message):
    user_id = message.from_user.id
    current_time = time.time()
    global last_message_id, last_user_message_id
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if last_user_message_id:
        delete_previous_message(message.chat.id, last_user_message_id)

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if last_message_id:
        delete_previous_message(message.chat.id, last_message_id)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
    last_user_message_id = message.message_id

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    schedule_link = fetch_schedule_link()
    if schedule_link.startswith("–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"):
        response_message = bot.reply_to(message, schedule_link)
        last_message_id = response_message.message_id
    else:
        file_data = download_file(schedule_link)
        file_name = f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ.xlsx'
        file_data.seek(0)
        response_message = bot.send_document(message.chat.id, (file_name, file_data))
        last_message_id = response_message.message_id

    if user_id in USER_REQUESTS:
        last_request_time = USER_REQUESTS[user_id]
        if current_time - last_request_time < 300:  # 60 —Å–µ–∫—É–Ω–¥
            bot.reply_to(message, "–í—ã —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
            return
    
    USER_REQUESTS[user_id] = current_time

if __name__ == '__main__':
    bot.infinity_polling()